---
/*
 * This is for compatibility with gaffiot.fr references.
 */

import { KeyType, removeDiacritics } from "greek-conversion";
import { fetchEntries, type ApiLookupResponse } from "../api";
import SingleColumn from "../layouts/SingleColumn.astro";

export const prerender = false;

const { greekStr } = Astro.params;

let data: ApiLookupResponse<"word" | "uri"> = {
  version: "",
  count: 0,
  countAll: 0,
  morphology: {},
  entries: []
};

const unaccentedGreekStr = removeDiacritics(greekStr ?? "", KeyType.GREEK);

const NFDUnaccentedGreekStr = unaccentedGreekStr.normalize("NFD");
const isGreekStr: boolean = (
  !/[a-z]/i.test(NFDUnaccentedGreekStr) && /[α-ω]/i.test(NFDUnaccentedGreekStr)
);

if (unaccentedGreekStr && isGreekStr) {
  data = await fetchEntries(unaccentedGreekStr, { fields: ["word", "uri"] });
}

/*
 * Replace the Greek Beta Symbol with the regular letter as some browsers
 * may not display it accurately.
 */
const title = unaccentedGreekStr?.replace(/\u03D0/g, "β") ?? "";
---

<SingleColumn title={title} description="" noindex>
  <entry-article
    class="space-y-3 py-6 text-xl md:py-12 lg:space-y-6"
    role="article"
  >
    <header>
      <h1 class="text-2xl font-bold leading-loose lg:text-3xl">
        {
          data.entries.length ? (
            <>Résultats pour «&nbsp;{unaccentedGreekStr}&nbsp;»</>
          ) : (
            <>Aucun résultat pour «&nbsp;{unaccentedGreekStr}&nbsp;»</>
          )
        }
      </h1>
    </header>

    {
      !isGreekStr ? (
        <section>
          <p>Les recherches doivent être rédigées en caractères grecs.</p>
        </section>
      ) : undefined
    }

    {
      data.entries.length ? (
        <section>
          <ul>
            {data.entries.map((entry) => (
              <li>
                <a href={`/${entry.uri}`}>{entry.word}</a>
              </li>
            ))}
          </ul>
        </section>
      ) : undefined
    }
  </entry-article>
</SingleColumn>
